<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置注解扫描-->
    <context:component-scan base-package="com.www.zhxy">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--处理器映射器和处理器适配器功能增强-->
    <!--    <mvc:annotation-driven/>-->
    <!--视图解析器-->
    <!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="prefix" value="/WEB-INF/templates/"/>
            <property name="suffix" value=".jsp"/>
        </bean>-->

    <!-- 配置Thymeleaf视图解析器 -->
<!--    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        &lt;!&ndash; 视图前缀 &ndash;&gt;
                        <property name="prefix" value="/WEB-INF/static/"/>
                        &lt;!&ndash; 视图后缀 &ndash;&gt;
                        <property name="suffix" value=".html"/>
                        &lt;!&ndash;                        <property name="suffix" value=".html"/>&ndash;&gt;
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>-->
    <!--
    处理静态资源，例如html、js、css、jpg
    若只设置该标签，则只能访问静态资源，其他请求则无法访问
    此时必须设置<mvc:annotation-driven/>解决问题

    -->
    <!--在springmvc配置文件中指定放行资源-->
    <!-- <mvc:resources mapping="/js/**" location="/js/"/>
     <mvc:resources mapping="/css/**" location="/css/"/>
     <mvc:resources mapping="/img/**" location="/img/"/>-->
<!--    <mvc:default-servlet-handler />-->
    <!-- 开启mvc注解驱动 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理响应中文内容乱码 -->
            <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:resources mapping="/**" location="/WEB-INF/static/" />
<!--
    &lt;!&ndash;spring整合mybatis&ndash;&gt;
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    &lt;!&ndash;SqlSessionFactory创建交给spring的IOC容器&ndash;&gt;
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        &lt;!&ndash;数据库环境配置&ndash;&gt;
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash;类型别名配置&ndash;&gt;
        <property name="typeAliasesPackage" value="com.www.zhxy.entity"/>
        &lt;!&ndash;如果要引入mybatis主配置文件，可以通过如下配置&ndash;&gt;
        &lt;!&ndash;        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>&ndash;&gt;
    </bean>
    &lt;!&ndash;映射接口扫描配置，由spring创建代理对象，交给IOC容器&ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.www.zhxy.dao"/>
    </bean>-->
</beans>