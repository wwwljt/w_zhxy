<!--
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    &lt;!&ndash;1、引入外部属据库 连接资源 此时就可以${属性名}的方式访问属性值&ndash;&gt;
    <properties resource="jdbc.properties"/>
    &lt;!&ndash; 2、
            这些是极其重要的调整, 它们会修改 MyBatis 在运行时的行为方式。
            下面这个表格描述了设置信息,它们的含义和默认值。
    &ndash;&gt;
    &lt;!&ndash;<settings>
        &lt;!&ndash;
                全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。
                有效值 ： true/ false  ; 默认值 ： true
        &ndash;&gt;
        <setting name="cacheEnabled" value="true"/>
        &lt;!&ndash;
                延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。
                特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态。
                有效值 ： true/ false  ; 默认值 ： false
        &ndash;&gt;
        <setting name="lazyLoadingEnabled" value="true"/>
        &lt;!&ndash;
                是否允许单个语句返回多结果集（需要数据库驱动支持）。
                有效值 ： true/ false  ; 默认值 ： true
        &ndash;&gt;
        <setting name="multipleResultSetsEnabled" value="true"/>
        &lt;!&ndash;
              使用列标签代替列名。实际表现依赖于数据库驱动，
              具体可参考数据库驱动的相关文档，或通过对比测试来观察。
              有效值 ： true/ false  ; 默认值 ： true
        &ndash;&gt;
        <setting name="useColumnLabel" value="true"/>
        &lt;!&ndash;
              允许 JDBC 支持自动生成主键，需要数据库驱动支持。
              如果设置为 true，将强制使用自动生成主键。尽管一些数据库驱动不支持此特性，但仍可正常工作（如 Derby）。
              有效值 ： true/ false  ; 默认值 ： FALSE
        &ndash;&gt;
        <setting name="useGeneratedKeys" value="false"/>
        &lt;!&ndash;
              指定 MyBatis 应如何自动映射列到字段或属性。
              NONE 表示关闭自动映射；
              PARTIAL 只会自动映射没有定义嵌套结果映射的字段。
              FULL 会自动映射任何复杂的结果集（无论是否嵌套）。
              有效值 ： NONE, PARTIAL, FULL  ; 默认值 ： PARTIAL
        &ndash;&gt;
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        &lt;!&ndash;
              指定发现自动映射目标未知列（或未知属性类型）的行为。
                NONE: 不做任何反应
                WARNING: 输出警告日志（'org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN）
                FAILING: 映射失败 (抛出 SqlSessionException)
              有效值 ： NONE, WARNING, FAILING  ; 默认值 ： NONE
        &ndash;&gt;
        <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
        &lt;!&ndash;
              配置默认的执行器。
              SIMPLE 就是普通的执行器；
              REUSE 执行器会重用预处理语句（PreparedStatement）；
              BATCH 执行器不仅重用语句还会执行批量更新。
              有效值 ： SIMPLE REUSE BATCH  ; 默认值 ：SIMPLE
        &ndash;&gt;
        <setting name="defaultExecutorType" value="SIMPLE"/>
        &lt;!&ndash;
              设置超时时间，它决定数据库驱动等待数据库响应的秒数。
              有效值 ： 任意正整数  ; 默认值 ： 任意正整数
        &ndash;&gt;
        <setting name="defaultStatementTimeout" value="25"/>
        &lt;!&ndash;
              为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。
               有效值 ： 任意正整数  ; 默认值 ： 任意正整数
        &ndash;&gt;
        <setting name="defaultFetchSize" value="100"/>
        &lt;!&ndash;
            是否允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为 false。
            有效值 ： true/ false  ; 默认值 ： True
      &ndash;&gt;
        <setting name="safeRowBoundsEnabled" value="false"/>
        &lt;!&ndash;
              是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。
              有效值 ： true/ false  ; 默认值 ： False
        &ndash;&gt;
        <setting name="mapUnderscoreToCamelCase" value="false"/>
        &lt;!&ndash;
             MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。
              默认值为 SESSION，会缓存一个会话中执行的所有查询。
              若设置值为 STATEMENT，本地缓存将仅用于执行语句，对相同 SqlSession 的不同查询将不会进行缓存。
              有效值 ： SESSION | STATEMENT  ; 默认值 ： SESSION
        &ndash;&gt;
        <setting name="localCacheScope" value="SESSION"/>
        &lt;!&ndash;
              当没有为参数指定特定的 JDBC 类型时，空值的默认 JDBC 类型。
              某些数据库驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，
              比如 NULL、VARCHAR 或 OTHER。
              有效值 ： JdbcType 常量，常用值：NULL、VARCHAR 或 OTHER。 ; 默认值 ： OTHER
        &ndash;&gt;
        <setting name="jdbcTypeForNull" value="OTHER"/>
        &lt;!&ndash;
              指定对象的哪些方法触发一次延迟加载。
              有效值 ： 	用逗号分隔的方法列表。。 ; 默认值 ： equals,clone,hashCode,toString
        &ndash;&gt;
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>

    </settings>&ndash;&gt;

    &lt;!&ndash;     typeAliases 配置别名&ndash;&gt;
    <typeAliases>
        &lt;!&ndash; typeAlias 用於配置 別名， type 屬性指定的是实体类的全限定类名。 alias 属性指定别名 ，当指定了别名就在区分大小写  &ndash;&gt;
        &lt;!&ndash;        <typeAlias type="com.www.mybatis.demo02.entity.User11" alias="user"/>&ndash;&gt;
        &lt;!&ndash; 用于指定要配置别名的包。当指定之后 。该包下的实体类都会注册别名 ，并且类名就是别名。不再区分大小写 &ndash;&gt;
        <package name="com.www.zhxy.entity"/>

    </typeAliases>


    &lt;!&ndash;
        配置环境
       environments：设置多个连接数据库的环境
       属性：
       default：设置默认使用的环境的id
   &ndash;&gt;
    <environments default="mysql">
        &lt;!&ndash;配置 mysql 的环境&ndash;&gt;
        <environment id="mysql">
            &lt;!&ndash;            配置事务
                transactionManager：设置事务管理方式
                属性：type：设置事务管理方式，type="JDBC|MANAGED"
                type="JDBC"：设置当前环境的事务管理都必须手动处理
                type="MANAGED"：设置事务被管理，例如spring中的AOP
            &ndash;&gt;

            <transactionManager type="JDBC"/>

            &lt;!&ndash;            配置 连接池
                    dataSource：设置数据源
                    属性：
                    type：设置数据源的类型，type="POOLED|UNPOOLED|JNDI"
                    type="POOLED"：使用数据库连接池，即会将创建的连接进行缓存，下次使用可以从
                    缓存中直接获取，不需要重新创建
                    type="UNPOOLED"：不使用数据库连接池，即每次使用连接都需要重新创建
                    type="JNDI"：调用上下文中的数据源
            &ndash;&gt;
            <dataSource type="POOLED">
                &lt;!&ndash;                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>&ndash;&gt;
                &lt;!&ndash;                <property name="url" value="jdbc:mysql://localhost:3306/test?serverTimezone=GMT"/>&ndash;&gt;
                &lt;!&ndash;                <property name="username" value="root"/>&ndash;&gt;
                &lt;!&ndash;                <property name="password" value="Wwl18238711508."/>&ndash;&gt;
                &lt;!&ndash;设置驱动类的全类名&ndash;&gt;
                <property name="driver" value="${jdbc.driver}"/>
                &lt;!&ndash;设置连接数据库的连接地址&ndash;&gt;
                <property name="url" value="${jdbc.url}"/>
                &lt;!&ndash;设置连接数据库的用户名&ndash;&gt;
                <property name="username" value="${jdbc.username}"/>
                &lt;!&ndash;设置连接数据库的密码&ndash;&gt;
                <property name="password" value="${jdbc.password}"/>
            </dataSource>


        </environment>
    </environments>
    &lt;!&ndash;     配置 映射文件 的位置&ndash;&gt;
    <mappers>
        &lt;!&ndash; 使用相对于类路径的资源引用 &ndash;&gt;
        &lt;!&ndash;                <mapper resource="com/www/mybatis/demo01_helloworld/mapper/EmployeeMapper.xml"/>&ndash;&gt;
        &lt;!&ndash; 使用映射器接口实现类的完全限定类名 &ndash;&gt;
        &lt;!&ndash;        <mapper url="file:///var/mappers/AuthorMapper.xml"/>&ndash;&gt;
        &lt;!&ndash; 使用映射器接口实现类的完全限定类名 &ndash;&gt;
        &lt;!&ndash;        <mapper class="com.www.mybatis.demo02.mapper.UserMapper"/>&ndash;&gt;
        &lt;!&ndash; 将包内的映射器接口实现全部注册为映射器 &ndash;&gt;
        <package name="com.www.zhxy.dao"/>
    </mappers>

</configuration>-->
